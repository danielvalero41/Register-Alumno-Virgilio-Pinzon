// Generated by https://quicktype.io

export interface ListAllStudents {
  docs: Student[];
  totalDocs: number;
  limit: number;
  totalPages: number;
  page: number;
  pagingCounter: number;
  hasPrevPage: boolean;
  hasNextPage: boolean;
  prevPage: null;
  nextPage: number;
}

export interface Student {
  datosPersonales: DatosPersonales;
  aspectosSociales: AspectosSociales;
  identificacionPadres: IdentificacionPadres;
  aspectosSalud: AspectosSalud;
  representanteLegal: RepresentanteLegal;
  otrosDatos: OtrosDatos;
  controlRetiro: ControlRetiro;
  _id: string;
  controlInscripcion: ControlInscripcion[];
  actualizacionDatos: ActualizacionDato[];
  createdAt: string;
  updatedAt: string;
}

export interface ActualizacionDato {
  grado: string;
  estatura: number;
  peso: number;
  calzado: number;
  tallaCamisa: string;
  tallaPantalon: number;
}

export interface AspectosSalud {
  gatear: Gatear;
  familiarDiscapacidad: FamiliarDiscapacidad;
  habitosAlimenticios: HabitosAlimenticios;
  enfermedadesEmbarazo: string[];
  antecedentesPerinatales: AntecedentesPerinatale[];
  antecedentesPostNatales: string;
  problemasNacimiento: string;
  pesoNacimiento: number;
  tallaNacimiento: number;
  lloroNacer: boolean;
  edadCaminar: number;
  enfermedadesNinho: string[];
  vacunasRecibidas: string[];
}

export enum AntecedentesPerinatale {
  ATermino = 'A termino',
  Cesarea = 'Cesarea',
  Forceps = 'Forceps',
  Normal = 'Normal',
  Prematuro = 'Prematuro',
}

export interface FamiliarDiscapacidad {
  posee: boolean;
  descripcion: string;
}

export interface Gatear {
  gateo: boolean;
  edad: number;
}

export interface HabitosAlimenticios {
  alimentos: Alimentos;
  alergia: Alergia;
  objetosRecetados: ObjetosRecetados;
  tratamiento: Tratamiento;
  asegurado: Asegurado;
  desarrolloLenguajeMotor: DesarrolloLenguajeMotor;
  condicionEspecial: string;
  necesidadesCompromiso: string[];
}

export interface Alergia {
  posee: boolean;
  descripcion: string;
  alimentos: string;
}

export interface Alimentos {
  comeTodo: boolean;
  tipo: string;
}

export interface Asegurado {
  seguro: boolean;
  tipo: string[];
}

export interface DesarrolloLenguajeMotor {
  edadHablo: number;
  duermeBien: string;
  alteraFacil: boolean;
  manoTrabajar: ManoTrabajar;
}

export enum ManoTrabajar {
  Derecha = 'Derecha',
  Izquierda = 'Izquierda',
}

export interface ObjetosRecetados {
  zapatosOrtopedicos: boolean;
  lentesRecetados: boolean;
  otros: string;
}

export interface Tratamiento {
  recibe: boolean;
  nombre: string;
  motivo: string;
  medico: string;
  especialidad: string;
  fechaInicio: string;
}

export interface AspectosSociales {
  viveNinho: ViveNinho;
  hermanos: Hermanos;
  otrosFamiliaresHogar: OtrosFamiliaresHogar;
  lecturaHogar: LecturaHogar;
  trabajo: AspectosSocialesTrabajo;
  totalPersonasHogar: number;
  personaPostClases: string;
  acompanhanteTareas: string;
  deportesPractica: string[];
  horarioPractica: string;
  talentoActitud: string[];
  beca: boolean;
}

export interface Hermanos {
  cantidad: number;
  lugarOcupaNinho: string;
  descripcionRelacion: string;
}

export interface LecturaHogar {
  practica: boolean;
  tipo: string;
}

export interface OtrosFamiliaresHogar {
  viven: boolean;
  parentesco: string[];
  descripcionRelacion: string;
}

export interface AspectosSocialesTrabajo {
  ejerce: boolean;
  funciones: string;
}

export interface ViveNinho {
  madre: boolean;
  padre: boolean;
  otros: string;
}

export interface ControlInscripcion {
  docente: Docente;
  grado: string;
  anhoEscolar: AnhoEscolar;
  fechaInscripcion: string;
}

export enum AnhoEscolar {
  The20222023 = '2022-2023',
}

export interface Docente {
  nombre: string;
  apellido: string;
}

export interface ControlRetiro {
  representante: Representante;
  retiro: boolean;
  fecha: string;
  motivo: string;
  institutoAEstudiar: string;
}

export interface Representante {
  nombre: string;
  cedula: string;
}

export interface DatosPersonales {
  cedula: Cedula;
  canaima: Canaima;
  hermanosInstitucion: HermanosInstitucion;
  personaEmergencia: PersonaEmergencia;
  nombre: string;
  apellido: string;
  grupoSanguineo: string;
  sexo: Sexo;
  fechaNacimiento: string;
  lugarNacimiento: string;
  direccionHabitacion: string;
  parroquia: string;
  municipio: string;
  pais: string;
  estadoNacimiento: string;
  telefonoResidencial: string;
  correo: string;
  nuevoIngreso: boolean;
  institucionProcedencia: string;
  razonInscripcion: string;
  gradoCursar: string;
  repitiente: boolean;
  regular: boolean;
  tallaCamisa: string;
  estatura: number;
  peso: number;
  tallaPantalon: number;
  calzado: number;
  edad: number;
}

export interface Canaima {
  posee: boolean;
  serial: string;
}

export interface Cedula {
  tipo: Tipo;
  numero: string;
}

export enum Tipo {
  E = 'E',
  V = 'V',
}

export interface HermanosInstitucion {
  posee: boolean;
  cantidad: number;
  gradoCursan: string[];
}

export interface PersonaEmergencia {
  nombre: string;
  parentesco: string;
  telefonoResidencial: string;
  telefonoCelular: string;
}

export enum Sexo {
  Femenino = 'Femenino',
  Masculino = 'Masculino',
}

export interface IdentificacionPadres {
  madre: RepresentanteLegal;
  padre: RepresentanteLegal;
}

export interface RepresentanteLegal {
  cedula: Cedula;
  trabajo: RepresentanteLegalTrabajo;
  vivienda?: Vivienda;
  misionSocial?: FamiliarDiscapacidad;
  apellido: string;
  nombre: string;
  fechaNacimiento: string;
  estadoCivil: EstadoCivil;
  edad: number;
  lugarNacimiento: string;
  profesion: string;
  ingresoEconomico: number;
  telefonoResidencial: string;
  telefonoCelular: string;
  direccionHabitacion?: string;
  enfermedadesPadecidas?: EnfermedadesPadecida[];
  viveConNinho: boolean;
  gradoInstruccion?: GradoInstruccion;
  religion?: string;
  actividades?: string[];
  correo: string;
  relacionNinho?: string;
  parentesco?: string;
  razonRepresenta?: string;
}

export enum EnfermedadesPadecida {
  Chikungunya = 'Chikungunya',
  Covid = 'Covid',
  Fiebre = 'Fiebre',
  Neumonia = 'Neumonia',
  Otro = 'Otro',
}

export enum EstadoCivil {
  C = 'C',
  D = 'D',
  Otro = 'Otro',
  S = 'S',
}

export enum GradoInstruccion {
  Bachiller = 'Bachiller',
  Otro = 'Otro',
  Primaria = 'Primaria',
  Universitario = 'Universitario',
}

export interface RepresentanteLegalTrabajo {
  lugar: string;
  telefono: string;
}

export interface Vivienda {
  tenencia: string;
  tipo: string;
}

export interface OtrosDatos {
  gustosNinho: GustosNinho;
  retiraSoloInstitucion: RetiraSoloInstitucion;
  responsableRetiro: Representante;
  transporteEscuela: TransporteEscuela;
  gradoReprobado: GradoReprobado;
  actividadesIndependientes: ActividadesIndependiente[];
  personaCuidaNinhoHogar: string;
  cumpleNormasHogar: boolean;
  firmaActaCompromiso: boolean;
}

export enum ActividadesIndependiente {
  Ba単arse = 'Ba単arse',
  Comer = 'Comer',
  ExpresarseOralmente = 'Expresarse oralmente',
  HacerTareas = 'Hacer tareas',
  IRAlBa単o = 'Ir al ba単o',
  Vestirse = 'Vestirse',
}

export interface GradoReprobado {
  reprobado: boolean;
  grado: string;
}

export interface GustosNinho {
  gustos: Gusto[];
  horas: number;
}

export enum Gusto {
  Celular = 'Celular',
  Computadora = 'Computadora',
  DSWiiMP = 'DS, Wii, MP',
  JugarConAmigos = 'Jugar con amigos',
  JugarConLosHermanos = 'Jugar con los hermanos',
  JugarConSUSPadres = 'Jugar con sus padres',
  Mascotas = 'Mascotas',
  VerTelevision = 'Ver television',
}

export interface RetiraSoloInstitucion {
  retira: boolean;
  razon: string;
}

export interface TransporteEscuela {
  medio: Medio;
  via: string;
}

export enum Medio {
  Privado = 'Privado',
  Publico = 'Publico',
  TransporteEscolar = 'Transporte Escolar',
}
